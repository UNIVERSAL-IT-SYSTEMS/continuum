# Copyright 2016 Tuplejump
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################
# The Continuum config
################################################################
continuum {

  creation.timeout = 10s

  kafka {
    port = 9092
    # initial seed
    host.name = "127.0.0.1"
    # Comma-separated list of 'host:port' entries.
    # Default kafka is port 9092. See config/server.properties.
    connect = "127.0.0.1:9092"
    # Comma-separated list of zookeeper 'host:port' entries.
    # Default zookeeper is port 2181. See config/zookeeper.properties.
    zookeeper.connect = "127.0.0.1:2181"

    log.dir = ""

    publisher {
    }

    consumer {
    }
  }
}

akka {
  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  #logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off
  jvm-exit-on-fatal-error = off
  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    #watch-failure-detector.acceptable-heartbeat-pause
    #untrusted-mode = on
    #trusted-selection-paths = ["/user/publisher-role", "/user/subscriber-role"]
    retry-gate-closed-for = 1 s # default 5 s
    resend-interval = 1s # default 2 s
    log-remote-lifecycle-events = off
    log-sent-messages = off
    #transport-failure-detector {
    #  heartbeat-interval = 2 s   # default 4s
    #  acceptable-heartbeat-pause = 8 s  # default 10s
    #}
    netty.tcp {
      # Use this setting to bind a network interface to a different port
      #bind-port = s"${settings.AkkaClusterSeedPort}"
      # InetAddress.getLocalHost.getHostAddress is used if empty
      port = 0 # for the moment
    }
  }
  cluster {
    auto-down-unreachable-after = 12s
    unreachable-nodes-reaper-interval = 2 s
    log-info = on
    seed-nodes = []
    seed-node-timeout = 10s
    roles = ["$role"]
    #seed-node-timeout = 10 s
    #periodic-tasks-initial-delay = 1 s
    #retry-unsuccessful-join-after = 1 s
    #failure-detector {
    #  acceptable-heartbeat-pause = 10 s
    #  threshold = 9.0
    #  expected-response-after = 10 s
    #}
    metrics.enabled = off
  }

  stream {
    materializer {
      initial-input-buffer-size = 4
      max-input-buffer-size = 16
      dispatcher = ""
      subscription-timeout {
        mode = cancel
        timeout = 5s
      }
      debug-logging = off
      output-burst-limit = 1000
      auto-fusing = on

      debug {
        fuzzing-mode = off
      }
    }

    blocking-io-dispatcher = "akka.stream.default-blocking-io-dispatcher"

    default-blocking-io-dispatcher {
      type = "Dispatcher"
      executor = "thread-pool-executor"
      throughput = 1

      thread-pool-executor {
        core-pool-size-min = 2
        core-pool-size-factor = 2.0
        core-pool-size-max = 16
      }
    }
  }

  #ssl-config.protocol = ""
}
